v 2.0.6

Demo

- MS PetShop 4.0 powered by BLToolkit (see the dev version of the project).

Bug fixes

- DbManager.OutputParameter lacks overload with 'size' parameters.
- CacheAspect hungs a desktop application on exit.
- ExecuteResultSet fails on many-to-one relations.
- TypeBuilder fails to override a method with generic parameters or generic return type.

Enhancement

- ParamSize & ParamDbType attributes to tweak DataAccessor parameters. Especially output ones.
- All 'emit.stloc' immediately followed by 'emit.ldloc' were replaced with simple 'emit.dup' command.
  Lots of redundant local variables were removed.
- UnitTests for Oracle, Firebird & Access (Jet)
- DataSetTableAttribute is handled by all DataSet/DataTable related methods of DataAccessBuilder.
- ClearCache method for CacheAspect.
- Metadata provider for mapping.
- Ability to specify global assembly version & strong name key pair.
- AsyncAspect to execute any method asynchronously.
- Added support for ConnectionStrings config settings.
- Editable XmlDocuments.
- Added support for IDictionary, IDictionary<,>, IList, and IList<> abstract data accessor return types.

v 2.0.5

Breaking changes

- DbManager.InitCommand renamed to OnInitCommand.

Bug fixes

- System.Reflection.Emit.AssemblyBuilder assemblies are processed properly.
- RegExAttribute - now properly returns valid==true only when whole value is equal to match
- EditableObject serialization issue
- StandardPropertyDescriptor.CheckNull was always returning DBNull.Value if _isNull handler
  was returning null. Now configurable via Configuration.CheckNullReturnIfNull.
- PropertyChangedBuilder was crashing when property was not public
- ObjectBinder.IsNull was serialized to resources
- Oracle provider now handles arrays of nullable types correctly.
- DataAccessor.PrepareParameters was invoked only to ref parameters.
- DataAccessor.PrepareParameters lacks DbManager which may be external.
- DbManager.InitParameters did hot handle decimal type.
- MappingSchema.ValueToEnum fails with underlying type other then Int32. 
- CounterAspect catches the OnCatch event now to count exceptions.
- DbManager.ExecuteForEach does not call InitParameters in the loop.

Enhancement

- Ability to specify RegexOptions for RegExAttribute. Regex not being created on every call to IsValid
- Destination attribute works with scalar types.
- DataAccessorBuilder generates getters/setters for abstract properties & indexers.
- Ability to specify globaly whether strings should be trimed when mapping
- Ability to specify whether PropertyChange notification should only be fired when underlying value is changed
  and not when setter is called
- XmlDocument type support.
- DbManager.SetParameters() accepts arrays of IDbDataParameter.
- DataSetTableAttribute for DataAccessorBuilder to explicitly specify DataSet table name.
- Default CacheAspect.IsWeak value changed to false.
- Cleanup thread for CacheAspect.
- MemberMapper type can be specified directly in the target type declaration.
- Events for DbManager.OnBeforeOperation, OnAfterOperation, OnOperationException & OnInitCommand.

v 2.0.4

Bug fixes

- By default, the mapper included const fields into map list (???).
- If enum does not have explicit mapping, data accessor builder 
  does not convert it to underlying type.
- MemberMapper fails to convert an object to its base type.
- BindingListImpl.RemoveSort was not firing ListChange event.
- TypeAccessor.CreateExtendedPropertyDescriptors did not work properly
  with 3rd+ level nested properties.
- Object holder ignored NoInstanceAttribute.
- ValidatorContext caches NullValue.
- EditableObject.RejectChanges/RejectMemberChanges were not firing PropertyChanged event for reverted fields.
- Fixed the generating IsValueType && !IsPrimitive ref/out parameters.

Enhancement

- Operator<T> is extensible now.
- ObjectBinder can now control lifetime (Disposal) of underlying collection.
- DuckTyping (the idea was shamelessly stolen from http://www.codeproject.com/cs/library/nduck.asp)
- ParamNullValue attribute.
- Virtual method DataProviderBase.PrepareCommand to let a data provider modify SQL statement befory query.
- Virtual method CacheAspect.GetCache. Can be used to provide a custom hashtable.

v 2.0.3

Bug fixes

- Race condition in MappingSchema.GetObjectMapper.
- DbManager will not try to close the connection in the finalizer anymore.
- MinValue/MaxValue attributes now determine value type by object property/field instead of test value.
- Fixed obscure case when object is removed from EditableArrayList/BindingListImpl while ItemPropertyChanged 
  delegate is in process of being executed and collection handler was not yet invoked.

Enhancement

- HttpReader SOAP support.
- Convert<T,P> uses type cast operators when available.
- Third party DataProvider registration via appsettings.
- More specification adherent sorting behavior implementation of IBindingList/IBindingListView in BindingListImpl. 
- EditableArrayList (potentially breaking changes) heavily relies on BindingListImpl for IBindingList/IBindingListView 
  and their base interfaces implementation. 
- BindingListImpl is changed to be fully specification adherent binding wrapper for other object lists/collection types.
- 2.0.1 version obsolete methods have been removed.


v 2.0.2

Bug fixes

- Abstract class builder overrode virtual final methods.
- Append records to a log file.
- ObjectBinder's AllowNew, AllowEdit, AllowRemove properties serialization.

Enhancement

- New DataAccessor<T,A> class.
- Direction.ReturnValueAttribute takes the Member parameter in '@fieldName' format.
- New property Object of the InterceptCallInfo class, which is an intercepted object reference.

